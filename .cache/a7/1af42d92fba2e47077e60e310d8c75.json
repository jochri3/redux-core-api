{"id":"../src/utils/add-space-delimiter.js","dependencies":[{"name":"/Users/christianlisangola/Documents/Work/My business/montee-en-competence/myself/1-redux-core-api/package.json","includedInParent":true,"mtime":1622383040914}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addSpaceDelimiter = void 0;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar addSpaceDelimiter = function addSpaceDelimiter(str, olDelimiter) {\n  var parsedStr = \"\";\n\n  var _iterator = _createForOfIteratorHelper(str),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var char = _step.value;\n\n      if (char === olDelimiter) {\n        parsedStr += \" \";\n      } else {\n        parsedStr += char;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return parsedStr;\n};\n\nexports.addSpaceDelimiter = addSpaceDelimiter;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":14,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":7}},{"name":"addSpaceDelimiter","generated":{"line":14,"column":4},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":13}},{"generated":{"line":14,"column":21},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":30}},{"generated":{"line":14,"column":24},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":33}},{"name":"addSpaceDelimiter","generated":{"line":14,"column":33},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":13}},{"generated":{"line":14,"column":50},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":33}},{"name":"str","generated":{"line":14,"column":51},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":34}},{"generated":{"line":14,"column":54},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":33}},{"name":"olDelimiter","generated":{"line":14,"column":56},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":39}},{"generated":{"line":14,"column":67},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":33}},{"generated":{"line":14,"column":69},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":55}},{"generated":{"line":15,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":2,"column":2}},{"name":"parsedStr","generated":{"line":15,"column":6},"source":"../src/utils/add-space-delimiter.js","original":{"line":2,"column":6}},{"generated":{"line":15,"column":15},"source":"../src/utils/add-space-delimiter.js","original":{"line":2,"column":15}},{"generated":{"line":15,"column":18},"source":"../src/utils/add-space-delimiter.js","original":{"line":2,"column":18}},{"generated":{"line":15,"column":20},"source":"../src/utils/add-space-delimiter.js","original":{"line":2,"column":2}},{"generated":{"line":17,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":55}},{"name":"str","generated":{"line":17,"column":45},"source":"../src/utils/add-space-delimiter.js","original":{"line":3,"column":19}},{"generated":{"line":17,"column":48},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":55}},{"generated":{"line":18,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":55}},{"generated":{"line":20,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":55}},{"generated":{"line":21,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":3,"column":2}},{"generated":{"line":21,"column":56},"source":"../src/utils/add-space-delimiter.js","original":{"line":3,"column":24}},{"generated":{"line":22,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":3,"column":24}},{"name":"char","generated":{"line":22,"column":10},"source":"../src/utils/add-space-delimiter.js","original":{"line":3,"column":11}},{"generated":{"line":22,"column":14},"source":"../src/utils/add-space-delimiter.js","original":{"line":3,"column":24}},{"generated":{"line":24,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":4,"column":4}},{"name":"char","generated":{"line":24,"column":10},"source":"../src/utils/add-space-delimiter.js","original":{"line":4,"column":8}},{"generated":{"line":24,"column":14},"source":"../src/utils/add-space-delimiter.js","original":{"line":4,"column":12}},{"name":"olDelimiter","generated":{"line":24,"column":19},"source":"../src/utils/add-space-delimiter.js","original":{"line":4,"column":17}},{"generated":{"line":24,"column":30},"source":"../src/utils/add-space-delimiter.js","original":{"line":4,"column":4}},{"generated":{"line":24,"column":32},"source":"../src/utils/add-space-delimiter.js","original":{"line":4,"column":30}},{"name":"parsedStr","generated":{"line":25,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":5,"column":6}},{"name":"parsedStr","generated":{"line":25,"column":8},"source":"../src/utils/add-space-delimiter.js","original":{"line":5,"column":6}},{"generated":{"line":25,"column":17},"source":"../src/utils/add-space-delimiter.js","original":{"line":5,"column":15}},{"generated":{"line":25,"column":21},"source":"../src/utils/add-space-delimiter.js","original":{"line":5,"column":19}},{"generated":{"line":25,"column":24},"source":"../src/utils/add-space-delimiter.js","original":{"line":5,"column":6}},{"generated":{"line":26,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":6,"column":5}},{"generated":{"line":26,"column":7},"source":"../src/utils/add-space-delimiter.js","original":{"line":4,"column":4}},{"generated":{"line":26,"column":13},"source":"../src/utils/add-space-delimiter.js","original":{"line":6,"column":11}},{"name":"parsedStr","generated":{"line":27,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":7,"column":6}},{"name":"parsedStr","generated":{"line":27,"column":8},"source":"../src/utils/add-space-delimiter.js","original":{"line":7,"column":6}},{"generated":{"line":27,"column":17},"source":"../src/utils/add-space-delimiter.js","original":{"line":7,"column":15}},{"name":"char","generated":{"line":27,"column":21},"source":"../src/utils/add-space-delimiter.js","original":{"line":7,"column":19}},{"generated":{"line":27,"column":25},"source":"../src/utils/add-space-delimiter.js","original":{"line":7,"column":6}},{"generated":{"line":28,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":8,"column":5}},{"generated":{"line":29,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":9,"column":3}},{"generated":{"line":30,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":55}},{"generated":{"line":31,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":55}},{"generated":{"line":32,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":55}},{"generated":{"line":33,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":55}},{"generated":{"line":34,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":55}},{"generated":{"line":36,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":10,"column":2}},{"name":"parsedStr","generated":{"line":36,"column":9},"source":"../src/utils/add-space-delimiter.js","original":{"line":10,"column":9}},{"generated":{"line":36,"column":18},"source":"../src/utils/add-space-delimiter.js","original":{"line":10,"column":2}},{"generated":{"line":37,"column":0},"source":"../src/utils/add-space-delimiter.js","original":{"line":11,"column":1}},{"generated":{"line":37,"column":1},"source":"../src/utils/add-space-delimiter.js","original":{"line":1,"column":7}}],"sources":{"../src/utils/add-space-delimiter.js":"export const addSpaceDelimiter = (str, olDelimiter) => {\n  let parsedStr = \"\";\n  for (let char of str) {\n    if (char === olDelimiter) {\n      parsedStr += \" \";\n    } else {\n      parsedStr += char;\n    }\n  }\n  return parsedStr;\n};\n"},"lineCount":null}},"error":null,"hash":"1425e5e9326f6092054be28bdee2995c","cacheData":{"env":{}}}